prototype(Jonnitto.Plyr:Javascript) < prototype(Neos.Fusion:Array) {
    configuration = ${Configuration.setting('Jonnitto.Plyr')}
    @context.configuration = ${this.configuration}
    @ignoreProperties = ${['configuration']}

    library = Carbon.IncludeAssets:File {
        file = ${configuration.include.javascript.file}
        assetPackage = ${configuration.include.javascript.assetPackage}
        assetPath = ${configuration.include.javascript.assetPath}
        @if.render = ${node.context.live}
    }

    call = Neos.Fusion:Tag {
        tagName = 'script'
        content = Neos.Fusion:Array {
            options = Neos.Fusion:Template {
                templatePath = 'resource://Jonnitto.Plyr/Private/Templates/Javascript.js'
                i18n = ${['restart','rewind','play','pause','fastForward','seek','played','buffered','currentTime','duration','volume','mute','unmute','enableCaptions','disableCaptions','enterFullscreen','exitFullscreen','frameTitle','captions','settings','speed','quality','loop','start','end','all','reset','disabled','advertisement']}
                options = ${configuration.options}
                clickToPlay = ${this.options.clickToPlay && node.context.live}
                controls = Neos.Fusion:Case {
                    isDefault {
                        condition = ${configuration.options.controls == ['play-large', 'play', 'progress', 'current-time', 'mute', 'volume', 'captions', 'settings', 'pip', 'airplay', 'fullscreen'] ? true : false}
                        renderer = false
                    }
                    default {
                        condition = true
                        renderer = ${"['" + Array.join(configuration.options.controls, "','") + "']"}
                    }
                }
                settings = Neos.Fusion:Case {
                    isDefault {
                        condition = ${configuration.options.settings == ['captions', 'quality', 'speed', 'loop'] ? true : false}
                        renderer = false
                    }
                    default {
                        condition = true
                        renderer = ${"['" + Array.join(configuration.options.settings, "','") + "']"}
                    }
                }

                // keyboard:
                //    focused: true
                //    global: false
                keyboard = ${[]}
                keyboard.@process {
                    setFocused = ${!configuration.options.keyboard.focused ? Array.push(value, 'focused:false') : value}
                    setGlobal = ${configuration.options.keyboard.global ? Array.push(value, 'global:true') : value}
                    wrap = ${Array.isEmpty(value) ? false : '{' + Array.join(value, ',') + '}'}
                }

                // tooltips:
                //    controls: false
                //    seek: true
                tooltips = ${[]}
                tooltips.@process {
                    setControls = ${configuration.options.tooltips.controls ? Array.push(value, 'controls:true') : value}
                    setSeek = ${!configuration.options.tooltips.seek ? Array.push(value, 'seek:false') : value}
                    wrap = ${Array.isEmpty(value) ? false : '{' + Array.join(value, ',') + '}'}
                }

                // captions:
                //    active: false
                //    language: 'window.navigator.language.split('-')[0]'
                captions = ${[]}
                captions.@process {
                    setActive = ${configuration.options.captions.active ? Array.push(value, 'active:true') : value}
                    setLanguage = ${configuration.options.captions.language != "window.navigator.language.split('-')[0]" ? Array.push(value, 'language:' + configuration.options.captions.language) : value}
                    wrap = ${Array.isEmpty(value) ? false : '{' + Array.join(value, ',') + '}'}
                }

                // fullscreen:
                //    enabled: true
                //    fallback: true
                //    iosNative: false
                fullscreen = ${[]}
                fullscreen.@process {
                    setEnabled = ${!configuration.options.fullscreen.enabled ? Array.push(value, 'enabled:false') : value}
                    setFallback = ${!configuration.options.fullscreen.fallback ? Array.push(value, 'fallback:false') : value}
                    setIosNative = ${configuration.options.fullscreen.iosNative ? Array.push(value, 'iosNative:true') : value}
                    wrap = ${Array.isEmpty(value) ? false : '{' + Array.join(value, ',') + '}'}
                }

                // storage:
                //     enabled: true
                //     key: 'plyr'
                storage = ${[]}
                storage.@process {
                    setEnabled = ${!configuration.options.storage.enabled ? Array.push(value, 'enabled:false') : value}
                    setKey = ${configuration.options.storage.key != 'plyr' ? Array.push(value, "key:'" + configuration.options.storage.key + "'") : value}
                    wrap = ${Array.isEmpty(value) ? false : '{' + Array.join(value, ',') + '}'}
                }

                // speed:
                //     selected: 1
                //     options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2]
                speed = ${[]}
                speed.@process {
                    setSelected = ${configuration.options.speed.selected != 1 ? Array.push(value, 'selected:' + configuration.options.speed.selected) : value}
                    setOptions = ${configuration.options.speed.options != [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2] ? Array.push(value, 'options:[' + Array.join(configuration.options.speed.options, ',') + ']') : value}
                    wrap = ${Array.isEmpty(value) ? false : '{' + Array.join(value, ',') + '}'}
                }

                // quality:
                //     default: 'default'
                //     options: ['hd2160', 'hd1440', 'hd1080', 'hd720', 'large', 'medium', 'small', 'tiny', 'default']
                quality = ${[]}
                quality.@process {
                    setDefault = ${configuration.options.quality.default != 'default' ? Array.push(value, "default:'" + configuration.options.quality.default + "'") : value}
                    setOptions = ${configuration.options.quality.options != ['hd2160', 'hd1440', 'hd1080', 'hd720', 'large', 'medium', 'small', 'tiny', 'default'] ? Array.push(value, "options:['" + Array.join(configuration.options.controls, "','") + "']") : value}
                    wrap = ${Array.isEmpty(value) ? false : '{' + Array.join(value, ',') + '}'}
                }

                // ads:
                //     enabled: false
                //     publisherId: ''
                ads = ${[]}
                ads.@process {
                    setEnabled = ${configuration.options.ads.enabled ? Array.push(value, 'enabled:true') : value}
                    setPublisherId = ${configuration.options.ads.publisherId ? Array.push(value, "publisherId:'" + configuration.options.ads.publisherId + "'") : value}
                    wrap = ${Array.isEmpty(value) ? false : '{' + Array.join(value, ',') + '}'}
                }

                @process.clean = ${String.pregReplace(String.pregReplace(String.pregReplace(String.pregReplace(String.pregReplace(value, '/\/\/ jshint ignore:start\n/', ''), '/[\s]+/', ' '), '/[\s]+({|}|=|\+|;)[\s]+/', '$1'), '/(\',|;)[\s]+/', '$1'), '/;}/', '}')}
            }
            backend = Carbon.FileContent:FileContent {
                @if.render = ${node.context.inBackend}
                path = 'resource://Jonnitto.Plyr/Private/Templates/Backend.js'
            }
        }
    }
}
